name: build
on: [ push ]
jobs:
  build:
    strategy:
      matrix:
        label: [ ubuntu-latest, macos-latest, windows-latest ]
        include:
          - label: ubuntu-latest
            script: chmod +x ./package/package.sh && ./package/package.sh linux
            artifact: gitlab-branch-dashboard-linux
          - label: macos-latest
            script: chmod +x ./package/package.sh && ./package/package.sh macos
            artifact: gitlab-branch-dashboard-macos
          - label: windows-latest
            script: .\package\package.ps1
            artifact: gitlab-branch-dashboard-windows
    runs-on: [ '${{ matrix.label }}' ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Lint UI
        run: |
          npm ci --no-optional
          npm run lint
        working-directory: ./ui
      - name: Build UI
        run: |
          npm ci --no-optional
          npm run build
        working-directory: ./ui
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Check formatting of server
        run: |
          rustup component add rustfmt
          cargo fmt --quiet -- --check
        working-directory: ./server
      - name: Test server
        run: cargo test
        working-directory: ./server
      - name: Lint server
        run: |
          rustup component add clippy
          cargo clippy -- -D warnings
        working-directory: ./server
      - name: Build server
        run: cargo build --release
        working-directory: ./server
      - name: Package
        run: ${{ matrix.script }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact }}
          path: package/${{ matrix.artifact }}.zip
  release:
    runs-on: [ ubuntu-latest ]
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: release/
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
